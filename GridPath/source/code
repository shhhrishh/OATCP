
#include <bits/stdc++.h>
#include<vector>
using namespace std;

 int f(int i, int j, vector<vector<int>> &dp , vector<vector<char>>& grid){
        if(i>=0 && j>=0 && grid[i][j]=='*') return 0;
        if(i==0 and j==0){
            return 1;
        }
        if(i<0 or j<0){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        return dp[i][j]=f(i-1,j,dp,grid)+f(i,j-1,dp,grid);
    }
    
int uniquePathsWithObstacles(vector<vector<char>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>>dp(m,vector<int>(n,-1));
        return f(m-1,n-1,dp,grid);
    }
    
    
int main(){
    int n;
    cin>>n;
    vector<vector<char>>v(n,vector<char>(n));
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>v[i][j];
        }
    }
   

   cout<<uniquePathsWithObstacles(v)<<"\n";

}
